/// Vulnerability Finding events describe findings generated by vulnerability scanning tools.
///
/// Sourced from: `events/events/findings/vulnerability_finding.json`
#[derive(serde::Deserialize, serde::Serialize)]
pub struct VulnerabilityFinding {
    pub analytic: Option<String>,
    pub confidence: Option<String>,
    pub confidence_id: Option<String>,
    pub confidence_score: Option<String>,
    /// Describes details about the device that is affected by the vulnerability/vulnerabilities.
    pub device: Option<String>,
    pub finding: String,
    /// Describes details about the resource that is affected by the vulnerability/vulnerabilities.
    pub resource: Option<String>,
    /// The normalized status of the vulnerability finding.
    pub status: Option<String>,
    /// The normalized status identifier of the vulnerability finding.
    pub status_id: Option<String>,
    pub vulnerabilities: String,
}

impl VulnerabilityFinding {
    pub const UID: u16 = 2002;
}

/// Findings events report findings, detections, and possible resolutions of malware, anomalies, or actions performed by security products.
///
/// Sourced from: `events/events/findings/finding.json`
#[derive(serde::Deserialize, serde::Serialize)]
pub struct Finding {
    pub activity_id: Option<String>,
}

impl Finding {
    pub const UID: u16 = 2000;
}

/// Security Finding events describe findings, detections, anomalies, alerts and/or actions performed by security products
///
/// Sourced from: `events/events/findings/security_finding.json`
#[derive(serde::Deserialize, serde::Serialize)]
pub struct SecurityFinding {
    pub analytic: Option<String>,
    /// The attack object describes the technique and associated tactics as defined by <a target='_blank' href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK Matrix<sup>TM</sup></a>.
    pub attacks: Option<String>,
    pub cis_csc: Option<String>,
    pub compliance: Option<String>,
    pub confidence: Option<String>,
    pub confidence_id: Option<String>,
    pub confidence_score: Option<String>,
    pub data_sources: Option<String>,
    pub evidence: Option<String>,
    pub finding: String,
    pub impact: Option<String>,
    pub impact_id: Option<String>,
    pub impact_score: Option<String>,
    pub kill_chain: Option<String>,
    pub malware: Option<String>,
    pub nist: Option<String>,
    pub process: Option<String>,
    pub resources: Option<String>,
    pub risk_level: Option<String>,
    pub risk_level_id: Option<String>,
    pub risk_score: Option<String>,
    /// The normalized state of a security finding.
    pub state: Option<String>,
    /// The normalized state identifier of a security finding.
    pub state_id: String,
    pub vulnerabilities: Option<String>,
}

impl SecurityFinding {
    pub const UID: u16 = 2001;
}

// This file was automatically generated by ocsf-codegen at 2023-08-11T23:13:26+00:00 branch: "fixing-build-updating-schema" link: <https://github.com/yaleman/ocsf-rs/commit/8eed3271e56a81cc15bffb5bdd8540651315c06b> OCSF Schema version: 1.1.0-dev
